name: CI/CD - Build & Deploy React App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_image_tag.outputs.image_tag }} 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract Commit SHA
      id: set_image_tag
      run: |
        IMAGE_TAG=$(git rev-parse --short HEAD)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build and Push Docker image
      run: |
        docker build -t ayushmukherjee221b/react-app:$IMAGE_TAG .
        docker push ayushmukherjee221b/react-app:$IMAGE_TAG

    - name: Logout from Docker Hub
      run: docker logout


  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      id-token: write   
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set up Kubernetes CLI
      uses: azure/setup-kubectl@v3

    - name: Get AKS Credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --admin --overwrite-existing

    - name: Deploy to AKS
      run: |
        kubectl set image deployment/react-app react-app=ayushmukherjee221b/react-app:${{ needs.build-and-push.outputs.image_tag }}
